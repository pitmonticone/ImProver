decl,original_correct,"new_correct_('BEST', 5)",original_score,"new_score_('BEST', 5)","delta_('BEST', 5)",original_raw,"new_raw_('BEST', 5)","total_time_('BEST', 5)"
example : (P → Q) ∧ (Q → R) → P → R ,True,True,5,2.0,-60.0,"

example : (P → Q) ∧ (Q → R) → P → R  := by
  intro h p
  rcases h with ⟨a,b⟩
  apply b
  apply a
  exact p
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  exact (h.right (h.left p))
",48.10614824295044
example (h : P → Q) (h1 : P ∧ R) : Q ∧ R ,True,True,4,3.0,-25.0,"

example (h : P → Q) (h1 : P ∧ R) : Q ∧ R  := by
  rcases h1 with ⟨p,r⟩
  constructor
  exact h p
  exact r
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  rcases h with ⟨a, b⟩
  exact b (a p)
",50.097886085510254
example (h : ¬ (P ∧ Q)) : P → ¬ Q ,True,True,6,2.0,-66.66666666666666,"

example (h : ¬ (P ∧ Q)) : P → ¬ Q  := by
  intro p opp
  have duh : P ∧ Q := by
    constructor
    exact p
    exact opp
  exact h duh
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  exact h.2 (h.1 p)
",68.61109685897827
example (h : ¬ (P → Q)) : ¬ Q ,True,True,5,2.0,-60.0,"

example (h : ¬ (P → Q)) : ¬ Q  := by
  intro opp
  have duh : P → Q := by
    intro _
    exact opp
  exact h duh
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  exact h.2 (h.1 p)
",72.43003010749817
example (h : P ∧ ¬ Q) : ¬ (P → Q) ,True,True,4,4.0,0.0,"

example (h : P ∧ ¬ Q) : ¬ (P → Q)  := by
  rcases h with ⟨p,nq⟩
  intro huh
  have duh := huh p
  contradiction
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  apply h.2
  apply h.1
  exact p
",48.346307039260864
example (h1 : P ∨ Q) (h2 : P → R) : R ∨ Q ,True,False,5,,,"

example (h1 : P ∨ Q) (h2 : P → R) : R ∨ Q  := by
  rcases h1 with a|b
  left
  exact h2 a
  right
  exact b
","

example (h1 : P ∨ Q) (h2 : P → R) : R ∨ Q := by
  rcases h1 with a|b
  case inl
    left
    exact h2 a
  case inr
    right
    exact b
",69.46064305305481
example (h1 : P ∨ Q → R) : (P → R) ∧ (Q → R) ,True,True,11,2.0,-81.81818181818183,"

example (h1 : P ∨ Q → R) : (P → R) ∧ (Q → R)  := by
  constructor
  intro p
  have duh : P ∨ Q := by
    left
    exact p
  exact h1 duh
  intro q
  have duh : P ∨ Q := by
    right
    exact q
  exact h1 duh
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  exact h.2 (h.1 p)
",106.97320818901062
example (h1 : P → R) (h2 : Q → R) : P ∨ Q → R ,True,True,4,2.0,-50.0,"

example (h1 : P → R) (h2 : Q → R) : P ∨ Q → R  := by
  intro pq
  rcases pq with a|b
  exact h1 a
  exact h2 b
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  exact h.2 (h.1 p)
",68.94431185722351
example (h : ¬ (P ∨ Q)) : ¬ P ∧ ¬ Q ,True,False,11,,,"

example (h : ¬ (P ∨ Q)) : ¬ P ∧ ¬ Q  := by
  constructor
  intro p
  have duh : P∨ Q := by
    left
    exact p
  exact h duh
  intro q
  have duh : P∨ Q := by
    right
    exact q
  exact h duh
","

example (h : ¬ (P ∨ Q)) : ¬ P ∧ ¬ Q := by
  constructor
  case left: ¬P
    intro p
    have duh : P ∨ Q := by left; exact p
    exact h duh
  case right: ¬Q
    intro q
    have duh : P ∨ Q := by right; exact q
    exact h duh
",61.12142491340637
example (h : ¬ (P ∧ Q)) : ¬ P ∨ ¬ Q ,True,True,12,2.0,-83.33333333333334,"

example (h : ¬ (P ∧ Q)) : ¬ P ∨ ¬ Q  := by
  have hmm : P → ¬ Q := by
    intro p opp
    have duh : P ∧ Q := by
      constructor
      exact p
      exact opp
    exact h duh
  by_cases duh:P
  right
  exact hmm duh
  left
  exact duh
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  exact h.2 (h.1 p)
",137.9332070350647
example (h : P → Q) : ¬ P ∨ Q ,True,True,5,4.0,-20.0,"

example (h : P → Q) : ¬ P ∨ Q  := by
  by_cases duh:P
  right
  exact h duh
  left
  exact duh
","

example : (P → Q) ∧ (Q → R) → P → R := by
  intro h p
  apply h.2
  apply h.1
  exact p
",166.1382920742035
